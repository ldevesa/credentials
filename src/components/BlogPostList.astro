---
import type { CollectionEntry } from 'astro:content';
import Card from "./Card.astro";
import Link from "./Link.astro";

/* export type Props = {
  posts: CollectionEntry<'blog'>[];
  start?: number;
}; */

interface Props {
    posts: CollectionEntry<'blog'>[];
    start?: number;
}

const { posts, start = 1 } = Astro.props;
//console.log('Astro.url.pathname', Astro.url.pathname)

// la expresión regular \/blog\/\d+ verifica si "/blog/" seguido de uno o más dígitos está presente en cualquier parte de la cadena
//var regex = /\/blog\/\d+/;
//var resultregex = regex.test(Astro.url.pathname);
//console.log('resultregex PostList', resultregex);
//href={resultregex ? `../blog/${post.slug.split('/')[1]}` : `./blog/${post.slug.split('/')[1]}`}

// Determinar la base de la URL actual
//const basePath = Astro.url.pathname.includes('/blog/blog') ? '../blog' : './blog';

// Normalizar la base de la ruta para manejar entornos de desarrollo y producción
//const basePath = Astro.url.pathname.endsWith('/blog') ? '../blog' : './blog';

// Alternativa: Detección Basada en Entorno
const basePath = import.meta.env.MODE === 'production' ? '../blog' : './blog';
console.log('Current mode:', import.meta.env.MODE);

---

<ol class="w-fit mx-auto grid grid-cols-1 lg:grid-cols-3 md:grid-cols-2 justify-items-center justify-center gap-y-20 gap-x-14 mt-10 mb-5" start={start}>
    {
        posts.map((post) => (
        <li>
        <Link class='flex justify-between'>   

            <Card 
                {...post.data} 
                body={post.data.author}
                date={post.data.publishDate.toLocaleDateString('en', {
                    year: "numeric",
                    month: "short",
                    day: "numeric"
                })}
                href={`${basePath}/${post.slug.split('/')[1]}`}
            />
        </Link>
        </li>
        ))
    }
</ol>